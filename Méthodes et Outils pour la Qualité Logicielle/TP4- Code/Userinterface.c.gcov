        -:    0:Source:Userinterface.c
        -:    0:Programs:5
        -:    1:/*
        -:    2: *    MISRA C:2012 Cash Register project
        -:    3: * ========================================
        -:    4: * File Path     : Userinterface.c
        -:    5: * Author        : M.W.Richardson
        -:    6: * Date          : 16/05/13
        -:    7: * Copyright     : (c) 2013 Liverpool Data Research Associates
        -:    8: */
        -:    9:
        -:   10:#include <stdio.h>
        -:   11:
        -:   12:/* Used for random function */
        -:   13:#include <stdlib.h>
        -:   14:
        -:   15:#include "Misrac_types.h"
        -:   16:#include "Userinterface.h"
        -:   17:#include "Cashregister.h"
        -:   18:
        -:   19:/* Forward declarations */
        -:   20:/* ==================== */
        -:   21:
        -:   22:static void goodbye(void);
        -:   23:static void randomShopping(void);
        -:   24:
        -:   25:/* Private functions */
        -:   26:/* ================= */
        -:   27:
        -:   28:/*
        -:   29: * Function to print out a message at the end of the program
        -:   30: */
function goodbye called 2 returned 100% blocks executed 100%
        2:   31:static void goodbye(void)
        -:   32:{
        2:   33:  printf("\nok bye\n");
call    0 returned 2
        2:   34:}
        -:   35:
        -:   36:/*
        -:   37: * Function that can be called to randomly select products
        -:   38: */
function randomShopping called 3 returned 100% blocks executed 100%
        3:   39:static void randomShopping(void)
        -:   40:{
        3:   41:  LDRA_uint32_t index = 0U;
        -:   42:  LDRA_uint32_t code;
        -:   43:
        3:   44:  printf("\n");
call    0 returned 3
        3:   45:  Cashregister_start();
call    0 returned 3
       66:   46:  while (index < (10U + ((LDRA_uint32_t) rand() % 50U )))
call    0 returned 63
branch  1 taken 60
branch  2 taken 3 (fallthrough)
        -:   47:  {
       60:   48:    code = (LDRA_uint32_t) rand() % 7U;
call    0 returned 60
       60:   49:    if (0U == code)
branch  0 taken 9 (fallthrough)
branch  1 taken 51
        -:   50:    {
        9:   51:      Cashregister_cancel();
call    0 returned 9
        -:   52:    }
        -:   53:    else
        -:   54:    {
       51:   55:      Cashregister_barcode(12343U + code);
call    0 returned 51
        -:   56:    }
       60:   57:    index++;
        -:   58:  }
        3:   59:  Cashregister_end();
call    0 returned 3
        3:   60:}
        -:   61:
        -:   62:/* Public functions */
        -:   63:/* ================ */
        -:   64:
        -:   65:/*
        -:   66: * Userinterface a help message to indicate what commands are available
        -:   67: */
function Userinterface_help called 7 returned 86% blocks executed 100%
        7:   68:void Userinterface_help(void)
        -:   69:{
        7:   70:  printf("choices are :\n");
call    0 returned 7
        7:   71:  printf("            : 0-9 to compose barcode\n");
call    0 returned 6
        6:   72:  printf("            : b to enter barcode\n");
call    0 returned 6
        6:   73:  printf("            : c to cancel last product\n");
call    0 returned 6
        6:   74:  printf("            : r to do random shopping\n");
call    0 returned 6
        6:   75:  printf("            : s to start\n");
call    0 returned 6
        6:   76:  printf("            : e to end\n");
call    0 returned 6
        6:   77:  printf("            : n for Coconuts\n");
call    0 returned 6
        6:   78:  printf("            : p for Pears\n");
call    0 returned 6
        6:   79:  printf("            : l for Lychees\n");
call    0 returned 6
        6:   80:  printf("            : k for Kiwis\n");
call    0 returned 6
        6:   81:  printf("            : g for Pommegranates\n");
call    0 returned 6
        6:   82:  printf("            : w for Watermelons\n");
call    0 returned 6
        6:   83:  printf("            : q to quit program\n");
call    0 returned 6
        6:   84:}
        -:   85:
        -:   86:/*
        -:   87: * parse the character entered and issue appropriate command
        -:   88: */
        -:   89:
function Userinterface_parse called 69 returned 99% blocks executed 88%
       69:   90:LDRA_uint32_t Userinterface_parse(const LDRA_char_t aChar)
        -:   91:{
        -:   92:  LDRA_uint32_t menu;
       69:   93:  if ((aChar >= '0') && (aChar <= '9'))
branch  0 taken 46 (fallthrough)
branch  1 taken 23
branch  2 taken 20 (fallthrough)
branch  3 taken 26
        -:   94:  {
       20:   95:    Cashregister_key((const LDRA_uint32_t)aChar - (const LDRA_uint32_t)'0');
call    0 returned 20
       20:   96:	menu = 0u;
        -:   97:  }
        -:   98:  else
        -:   99:  {
       49:  100:    switch (aChar)
branch  0 taken 6
branch  1 taken 1
branch  2 taken 0
branch  3 taken 4
branch  4 taken 1
branch  5 taken 0
branch  6 taken 1
branch  7 taken 1
branch  8 taken 2
branch  9 taken 2
branch 10 taken 3
branch 11 taken 2
branch 12 taken 22
branch 13 taken 4
        -:  101:    {
        -:  102:      case 'b':
        6:  103:        Cashregister_code();
call    0 returned 6
        6:  104:		menu = 1u;
        6:  105:        break;
        -:  106:      case 'n':
        -:  107:		/* Coconuts */
        1:  108:        Cashregister_barcode(12340U);
call    0 returned 1
        1:  109:		menu = 2u;
        1:  110:        break;
        -:  111:      case 'l':
        -:  112:		/* Lychees */
    #####:  113:        Cashregister_barcode(12346U);
call    0 never executed
    #####:  114:		menu = 3u;
    #####:  115:        break;
        -:  116:      case 'k':
        -:  117:		/* Kiwis */
        4:  118:        Cashregister_barcode(12347U);
call    0 returned 4
        4:  119:		menu = 4u;
        4:  120:        break;
        -:  121:      case 'p':
        -:  122:		/* Pomegranates */
        1:  123:        Cashregister_barcode(12348U);
call    0 returned 1
        1:  124:		menu = 5u;
        1:  125:        break;
        -:  126:      case 'g':
        -:  127:		/* Pears */
    #####:  128:        Cashregister_barcode(12349U);
call    0 never executed
    #####:  129:		menu = 6u;
    #####:  130:        break;
        -:  131:      case 'w':
        -:  132:		/* Watermelons */
        1:  133:        Cashregister_barcode(12350U);
call    0 returned 1
        1:  134:		menu = 7u;
        1:  135:        break;
        -:  136:      case 'c':
        1:  137:        Cashregister_cancel();
call    0 returned 1
        1:  138:		menu = 8u;
        1:  139:        break;
        -:  140:      case 'e':
        2:  141:        Cashregister_end();
call    0 returned 2
        2:  142:		menu = 9u;
        2:  143:        break;
        -:  144:      case 's':
        2:  145:        Cashregister_start();
call    0 returned 2
        2:  146:		menu = 10u;
        2:  147:        break;
        -:  148:      case 'r':
        3:  149:        randomShopping();
call    0 returned 3
        3:  150:		menu = 11u;
        3:  151:        break;
        -:  152:      case 'q':
        2:  153:        goodbye();
call    0 returned 2
        2:  154:		menu = 12u;
        2:  155:        break;
        -:  156:      case '\n': /* ignore crlf */
        -:  157:      case '\r': /* ignore crlf */
       22:  158:		menu = 13u;
       22:  159:        break;
        -:  160:        /* For any other character, display the help message */
        -:  161:      default:
        4:  162:        Userinterface_help();
call    0 returned 3
        3:  163:		menu = 14u;
        3:  164:        break;
        -:  165:    }
        -:  166:  }
       68:  167:  return menu;
        -:  168:}
        -:  169:
        -:  170:/*
        -:  171: * Simulates writing a message to the printer
        -:  172: */
function Userinterface_scan called 0 returned 0% blocks executed 0%
    #####:  173:void Userinterface_scan(LDRA_const_char_pt printerMsg)
        -:  174:{
    #####:  175:  printf(printerMsg);
call    0 never executed
    #####:  176:  printf("\n");
call    0 never executed
    #####:  177:}
        -:  178:
        -:  179:/*
        -:  180: * Simulates writing a message to the display
        -:  181: */
function Userinterface_show called 78 returned 100% blocks executed 100%
       78:  182:void Userinterface_show(LDRA_const_char_pt displayMsg)
        -:  183:{
       78:  184:  printf(displayMsg);
call    0 returned 78
       78:  185:  printf("\n");
call    0 returned 78
       78:  186:}
        -:  187:
