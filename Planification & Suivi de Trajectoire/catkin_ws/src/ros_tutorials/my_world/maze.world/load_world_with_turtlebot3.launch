<?xml version="1.0"?>
<launch>
    <!-- Spécifier le chemin du fichier world -->
    <arg name="world_file" default="$(find ros_tutorials)/my_world/maze.world/model.world"/>

    <!-- Ajouter le chemin des modèles au GAZEBO_MODEL_PATH -->
    <env name="GAZEBO_MODEL_PATH" value="$(find ros_tutorials)/my_world/maze.world"/>

    <!-- Lancer Gazebo avec le fichier world -->
    <node name="gazebo" pkg="gazebo_ros" type="gzserver" args="-s libgazebo_ros_factory.so $(arg world_file)" output="screen"/>

    <!-- Lancer le client Gazebo (interface graphique) -->
    <node name="gazebo_client" pkg="gazebo_ros" type="gzclient" output="screen"/>

    <!-- Charger la description du robot TurtleBot3 Waffle -->
    <arg name="model" default="waffle"/>
    <param name="robot_description" command="$(find xacro)/xacro '$(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro'" />

    <!-- Position initiale ajustée du robot -->
    <arg name="x_pos" default="0.0"/>
    <arg name="y_pos" default="0.0"/>
    <arg name="z_pos" default="0.1"/>

    <!-- Ajouter TurtleBot3 Waffle au monde -->
    <node pkg="gazebo_ros" type="spawn_model" name="spawn_turtlebot3_waffle" 
          args="-urdf -model turtlebot3 -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos) -param robot_description" 
          output="screen" />

    <!-- Activer le nœud de contrôle clavier pour TurtleBot3 -->
    <node pkg="turtlebot3_teleop" type="turtlebot3_teleop_key" name="teleop_keyboard" output="screen" />
</launch>
